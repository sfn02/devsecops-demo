
services:

  web:
    build: 
      context: .
      dockerfile: ./app/dockerfile
    container_name: rendezvous_app
    env_file:
      - .env
    volumes:
      - static_volume:/app/static 
      - media_volume:/app/media 

    expose:
      - 8000
    
    restart: always
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17
    container_name: rendezvous_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app_network
    env_file:
      - .env
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
    restart: always 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s



  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443 
    volumes:
      - static_volume:/usr/share/app/static/
      - ./nginx.d/:/etc/nginx/conf.d

    depends_on:
      - web
    restart: always 
    networks:
      - app_network
   
    
volumes:
  postgres_data:
  static_volume:
  media_volume:
networks:
  app_network:
    driver: bridge
